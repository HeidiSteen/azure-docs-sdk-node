### YamlMime:UniversalReference
items:
  - uid: ms-rest-js.BaseMapper
    name: BaseMapper
    fullName: BaseMapper
    children:
      - ms-rest-js.BaseMapper.constraints
      - ms-rest-js.BaseMapper.defaultValue
      - ms-rest-js.BaseMapper.isConstant
      - ms-rest-js.BaseMapper.nullable
      - ms-rest-js.BaseMapper.readOnly
      - ms-rest-js.BaseMapper.required
      - ms-rest-js.BaseMapper.serializedName
      - ms-rest-js.BaseMapper.type
      - ms-rest-js.BaseMapper.xmlElementName
      - ms-rest-js.BaseMapper.xmlIsAttribute
      - ms-rest-js.BaseMapper.xmlIsWrapped
      - ms-rest-js.BaseMapper.xmlName
    langs:
      - typeScript
    type: interface
    summary: ''
    package: ms-rest-js
  - uid: ms-rest-js.BaseMapper.constraints
    name: constraints
    fullName: constraints
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'constraints?: MapperConstraints'
      return:
        type:
          - ms-rest-js.MapperConstraints
    package: ms-rest-js
  - uid: ms-rest-js.BaseMapper.defaultValue
    name: defaultValue
    fullName: defaultValue
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'defaultValue?: any'
      return:
        type:
          - any
    package: ms-rest-js
  - uid: ms-rest-js.BaseMapper.isConstant
    name: isConstant
    fullName: isConstant
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'isConstant?: boolean'
      return:
        type:
          - boolean
    package: ms-rest-js
  - uid: ms-rest-js.BaseMapper.nullable
    name: nullable
    fullName: nullable
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'nullable?: boolean'
      return:
        type:
          - boolean
    package: ms-rest-js
  - uid: ms-rest-js.BaseMapper.readOnly
    name: readOnly
    fullName: readOnly
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'readOnly?: boolean'
      return:
        type:
          - boolean
    package: ms-rest-js
  - uid: ms-rest-js.BaseMapper.required
    name: required
    fullName: required
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'required?: boolean'
      return:
        type:
          - boolean
    package: ms-rest-js
  - uid: ms-rest-js.BaseMapper.serializedName
    name: serializedName
    fullName: serializedName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'serializedName?: string'
      return:
        type:
          - string
    package: ms-rest-js
  - uid: ms-rest-js.BaseMapper.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'type: MapperType'
      return:
        type:
          - ms-rest-js.MapperType
    package: ms-rest-js
  - uid: ms-rest-js.BaseMapper.xmlElementName
    name: xmlElementName
    fullName: xmlElementName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'xmlElementName?: string'
      return:
        type:
          - string
    package: ms-rest-js
  - uid: ms-rest-js.BaseMapper.xmlIsAttribute
    name: xmlIsAttribute
    fullName: xmlIsAttribute
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'xmlIsAttribute?: boolean'
      return:
        type:
          - boolean
    package: ms-rest-js
  - uid: ms-rest-js.BaseMapper.xmlIsWrapped
    name: xmlIsWrapped
    fullName: xmlIsWrapped
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'xmlIsWrapped?: boolean'
      return:
        type:
          - boolean
    package: ms-rest-js
  - uid: ms-rest-js.BaseMapper.xmlName
    name: xmlName
    fullName: xmlName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'xmlName?: string'
      return:
        type:
          - string
    package: ms-rest-js
references:
  - uid: ms-rest-js.MapperConstraints
    name: MapperConstraints
    spec.typeScript:
      - name: MapperConstraints
        fullName: MapperConstraints
        uid: ms-rest-js.MapperConstraints
  - uid: ms-rest-js.MapperType
    name: MapperType
    spec.typeScript:
      - name: MapperType
        fullName: MapperType
        uid: ms-rest-js.MapperType
