### YamlMime:UniversalReference
items:
  - uid: ms-rest-js.Serializer
    name: Serializer
    fullName: Serializer
    children:
      - ms-rest-js.Serializer.deserialize
      - ms-rest-js.Serializer.isXML
      - ms-rest-js.Serializer.modelMappers
      - ms-rest-js.Serializer.serialize
      - ms-rest-js.Serializer.constructor
      - ms-rest-js.Serializer.validateConstraints
    langs:
      - typeScript
    type: class
    summary: ''
    package: ms-rest-js
  - uid: ms-rest-js.Serializer.deserialize
    name: 'deserialize(Mapper, any, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deserialize the given object based on its metadata defined in the mapper
    syntax:
      content: >-
        function deserialize(mapper: Mapper, responseBody: any, objectName:
        string)
      parameters:
        - id: mapper
          type:
            - ms-rest-js.Mapper
          description: |
            The mapper which defines the metadata of the serializable object
        - id: responseBody
          type:
            - any
          description: |
            A valid Javascript entity to be deserialized
        - id: objectName
          type:
            - string
          description: |
            Name of the deserialized object
      return:
        type:
          - any
    package: ms-rest-js
  - uid: ms-rest-js.Serializer.isXML
    name: isXML
    fullName: isXML
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'isXML?: boolean | undefined'
      return:
        type:
          - boolean | undefined
    package: ms-rest-js
  - uid: ms-rest-js.Serializer.modelMappers
    name: modelMappers
    fullName: modelMappers
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'modelMappers: [key: string]: any'
      return:
        type:
          - '[key: string]: any'
    package: ms-rest-js
  - uid: ms-rest-js.Serializer.serialize
    name: 'serialize(Mapper, any, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Serialize the given object based on its metadata defined in the mapper
    syntax:
      content: 'function serialize(mapper: Mapper, object: any, objectName?: string)'
      parameters:
        - id: mapper
          type:
            - ms-rest-js.Mapper
          description: |
            The mapper which defines the metadata of the serializable object
        - id: object
          type:
            - any
          description: |
            A valid Javascript object to be serialized
        - id: objectName
          type:
            - string
          description: |
            Name of the serialized object
          optional: true
      return:
        type:
          - any
    package: ms-rest-js
  - uid: ms-rest-js.Serializer.constructor
    name: 'Serializer([key: string]: any, boolean | undefined)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new Serializer(modelMappers?: [key: string]: any, isXML?: boolean |
        undefined)
      parameters:
        - id: modelMappers
          type:
            - '[key: string]: any'
          description: ''
          optional: true
        - id: isXML
          type:
            - boolean | undefined
          description: ''
          optional: true
    package: ms-rest-js
  - uid: ms-rest-js.Serializer.validateConstraints
    name: 'validateConstraints(Mapper, any, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function validateConstraints(mapper: Mapper, value: any, objectName:
        string)
      parameters:
        - id: mapper
          type:
            - ms-rest-js.Mapper
          description: ''
        - id: value
          type:
            - any
          description: ''
        - id: objectName
          type:
            - string
          description: ''
    package: ms-rest-js
references:
  - uid: ms-rest-js.Mapper
    name: Mapper
    spec.typeScript:
      - name: Mapper
        fullName: Mapper
        uid: ms-rest-js.Mapper
